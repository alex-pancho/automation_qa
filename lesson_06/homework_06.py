# task 1
"""  Уявіть, що інопланетянина з кольором alien_color щойно збили в грі.
Створіть змінну під назвою alien_color і призначте їй значення 'green', 'yellow', або 'red'.
Напишіть оператор if, щоб перевірити, чи колір прибульця 'green'.
Якщо так, надрукуйте повідомлення про те, що гравець щойно заробив 5 балів.
"""
# #  Створення змінної та пошук через if
alien_color ='yellow'
if alien_color == 'yellow':
        print("Ви заробили 5 балів!")


# task 2
"""  Скопіюйте пеопередню відповідь, змініть і доповніть її умовою else.
Якщо колір прибульця зелений, надрукуйте, що гравець щойно заробив 5 балів.
Якщо колір прибульця не зелений, надрукуйте, що гравець щойно заробив 10 балів.
Зробіть так, щоб виводилася умова else.
"""
# # Створення  перемінної
alien_color = 'yellow'
# # Пошук через if та else
if alien_color == 'green':
        print("Ви заробили 5 балів!")
else:
     print("Ви заробили 10 балів!")

# task 3
# task 4
"""  Скопіюйте пеопередню відповідь, змініть і доповніть її умовою elif.
змінну під назвою alien_color перетворіть у список значень: 'green', 'yellow', 'red'
Якщо колір прибульця зелений, надрукуйте, що гравець щойно заробив 5 балів.
Якщо колір прибульця не зелений, надрукуйте, що гравець щойно заробив 10 балів.
Якщо прибулець червоний, надрукуйте повідомлення про те, що гравець заробив 15 очок
+ напишіть цикл for що перебере і обробить всі значення списку alien_color
"""
# створення списку
alien_color = ['green', 'yellow', 'red']
# # Цикл для пошуку кольорів через if, elif, else
for i in alien_color:
    if alien_color == 'green':
            print("Ви заробили 5 балів!")
    elif alien_color != 'red':
            print("Ви заробили 15 балів!")
    else:
            print("Ви заробили 15 балів!")


# task 5
"""  Начинки для піци (pizza_topping): напишіть цикл, який пропонує користувачеві ввести ряд начинок
для піци, доки він не введе значення 'quit'. Коли вони введуть кожну начинку,
надрукуйте повідомлення про те, що ви додасте цю начинку до їхньої піци.
"""
# # Створення пустого списку для прийняття  данних по додатках
final_order = []
# Створення циклу про запит у користувача про додоток до піци доки він не введе 'quit'
while True:
    pizza_topping = input("Введіть будь ласку яку начинку ви бажаєте додати?")
    if pizza_topping.lower() == 'quit':
       break
    else:
       final_order.append(pizza_topping)  # Додавання додатків  у список
       print(f"Ми додали цю начинку '{pizza_topping}' до вашої піци")
print("Ваша піцца з додатками:", final_order) # Вивід

       

# task 6
"""  Напишіть програму, яка знаходить суму всіх цифр натурального числа, яке вводить користувач.
Для перебору вводу від користувача використовуйте цикл. Виведіть суму цифр числа на екран.
Приклад виконання програми:
Введіть натуральне число: 12345
Сума цифр числа 12345: 15
"""
# # # Приймаємо число
natural_number = input("Введіть натуральне число: ")
# # # # Перебераємо його через цикл та лічимо суму

sum_numbers = 0
for digit in natural_number:
    sum_numbers = sum_numbers + int(digit)
# # # Виводимо
print(f"Сума цифр числа {natural_number}: {sum_numbers}")


# task 7
"""  Потрібно написати програму, яка просить користувача ввести числа, доки він не введе 0.
Програма повинна підрахувати суму всіх введених чисел, окрім 0, і вивести її на екран.
Це повинно працювать як калькулятор, в який ввів цифру - нажав плюс - ввів наступну цифру.
Після введеня 0 показує результат сумування.
Розв'язати з використанням циклу while та break
"""
# # Створення перемінної для підрахку фінальної суми
total_sum = 0
# Цикл та додавання чисел 
while True:
    another_number = int(input(("Введіть ваше число у наш чудо калькулятор плюсів: ")))
    total_sum += another_number

    if another_number == 0: # Перевірка якщо 0
        break
# Відповідь
print(f"Сума ваших чисел дорівнює: {total_sum}")

# task 8
"""  З використанням циклу for реалізуйте гру "Вгадай число".
Початок програми написаний, гравець має 5 спроб відгадати випадкове число від 1 до 20,
яке було згенеровано за допомогою функції randint() модуля random.
У кожній спробі гравець вводить своє припущення, після чого програма повідомляє, чи
було припущення занадто великим або занадто малим, чи гравець вгадав число.
"""
import random
secret_number = random.randint(1, 20)
guesses = 0
max_guesses = 5
print("Вгадайте число від 1 до 20 за 5 спроб!")

for guesses in range(1, max_guesses + 1):
    guess = int(input("Спроба {}: Введіть ваше припущення: ".format(guesses)))

    if guess < secret_number:
        print("Занадто мало! Спробуйте ще раз.")
    elif guess > secret_number:
        print("Занадто велико! Спробуйте ще раз.")
    else:
        print("Вітаємо! Ви вгадали число! Кількість спроб: {}".format(guesses))
        break
else:
    print("На жаль, ви не вгадали. Загадане число було: {}".format(secret_number))

# task 9
"""  Задача з використанням циклу for та continue. Задано список фруктів 'fruits'
потрібно вивести на екран всі елементи списку, окрім "orange".
"""

fruits = ["apple", "banana", "orange", "grape", "mango"]
for i in fruits:
   if i == 'orange':
        continue
   print(i)


# task 10
"""  Задано список чисел numbers, потрібно знайти список квадратів
парних чисел зі списку. Спробуйте використати if та цикл for в один рядок.
"""
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
result = [x**2 for x in numbers if x % 2 == 0]
print(result)  #  [4, 16, 36, 64, 100]